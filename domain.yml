version: '3.1'
intents:
- bot_challenge
- enter_token
- exactInput
- goodbye
- greet
- enter_tokenOut
- enter_tokenIn
- introduce
- sendToken
- copyTrading

entities:
- tokenIn
- tokenOut
- amountIn
- minimalAmountOut
- tokenInContract
- tokenOutContract
- addressOut
- targetAddress
- maximalAmountOfCopyTrading

slots:
  tokenIn:
    type: text
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: tokenIn
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: tokenIn     
    mappings:
      - type: from_entity
        entity: tokenIn
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: tokenIn 
        - active_loop: sendToken_form
          requested_slot: tokenIn
  tokenOut:
    type: text
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: tokenOut
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: tokenOut  
    mappings:
      - type: from_entity
        entity: tokenOut
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: tokenOut 
  amountIn:
    type: float
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: amountIn
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: amountIn
    mappings:
      - type: from_entity
        entity: amountIn
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: amountIn
        - active_loop: sendToken_form
          requested_slot: amountIn
  minimalAmountOut:
    type: float
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: amountIn
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: amountIn
    mappings:
      - type: from_entity
        entity: minimalAmountOut
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: minimalAmountOut

  tokenInContract:
    type: text
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: tokenInContract
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: tokenInContract 
    mappings:
      - type: from_entity
        entity: tokenInContract
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: tokenInContract
        - active_loop: sendToken_form
          requested_slot: tokenInContract
  tokenOutContract:
    type: text
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: tokenOutContract
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: tokenOutContract 
    mappings:
      - type: from_entity
        entity: tokenOutContract
      - type: from_text
        conditions:
        - active_loop: exactInput_form
          requested_slot: tokenOutContract
  addressOut:
    type: text
    influence_conversation: true
    # mappings:
    # - type: from_entity
    #   entity: tokenOutContract
    # - intent:
    #   - inform
    #   type: from_text
    #   conditions:
    #   - active_loop: exactInput_form
    #     requested_slot: tokenOutContract 
    mappings:
      - type: from_entity
        entity: addressOut
      - type: from_text
        conditions:
        - active_loop: sendToken_form
          requested_slot: addressOut
          
  targetAddress:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: targetAddress
      - type: from_text
        conditions:
        - active_loop: copyTrading_form
          requested_slot: targetAddress

  maximalAmountOfCopyTrading:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: maximalAmountOfCopyTrading
      - type: from_text
        conditions:
        - active_loop: copyTrading_form
          requested_slot: maximalAmountOfCopyTrading

forms:
  exactInput_form:
    required_slots:
    - tokenIn
    - tokenOut
    - amountIn
    - minimalAmountOut
    - tokenInContract
    - tokenOutContract
  sendToken_form:
    required_slots:
    - tokenIn
    - amountIn
    - addressOut
    - tokenInContract
  copyTrading_form:
    required_slots:
    - targetAddress
    - maximalAmountOfCopyTrading

responses:
  utter_greet:
  - text: Hey! Sparky is here, what can I do for you?
  utter_ask_exactInput:
  - text: Tell me what to do
  utter_submit_exactInputForm:
  - text: |
      Operation submitted: [SWAP]
      ---------------------------------------------------------- 
      You Pay: {AmountIn} {TokenIn} (contract address: {TokenInContract})
      You Ask: {MinimalAmountOut} {TokenOut} (contract address: {TokenOutContract})
  utter_goodbye:
  - text: Bye
  utter_stop:
  - text: Sure, previousactions have been teminated. Tell me what you want 

  utter_nlu_fallback:
  - text: I am not sure what you are talking about, please rephrase
  utter_ask_exactInput_form_tokenOut:
  - text: which token you intend to buy
  utter_ask_exactInput_form_tokenIn:
  - text: which token you would like to choose as the payment token
  utter_ask_exactInput_form_amountIn:
  - text: How many tokens you intend to pay

  utter_ask_sendToken_form_tokenIn:
  - text: which token you intend to send
  utter_ask_sendToken_form_amountIn:
  - text: How many tokens you intend to send
  utter_ask_sendToken_form_addressOut:
  - text: which address is the recepient?

  utter_submit_sendToken_form:
  - text: |
      Operation submitted: [TRANSFER]
      ---------------------------------------------------------- 
      You Send: {AmountIn} {TokenIn}(contract address: {TokenInContract})
      Recepient: {AddressOut}

  utter_ask_copyTrading_form_targetAddress:
  - text: which address you want to copy transactions from
  utter_ask_copyTrading_form_amountIn:
  - text: In each copy transaction, what is the cap amount of ETH you would like to swap
  utter_submit_copyTrading_form:
  - text: |
      Operation submitted: [COPY]
      ---------------------------------------------------------- 
      You Copy Transactions from: {TargetAddress}
      Cap amount of paid ETH in each transaction: {MaximalAmountOfCopyTrading}


  utter_introduce:
  - text: |
      Hello, my name is sparky -- a LLM agent for DEX Trading, I can help you with these:
      ----------------------------
      ✅ Ask me anything about blockchain and cryptocurrency, I will search answers based on my injective knowledges. 
      ✅ Tell me how you would like to trade with DEX (currently supports UniswapV3)
      ✅ Do some magics with MEV extraction & protection, I can help you send private transaction, limit order & copy-trading.




actions:
- action_submit_exactInputForm
- validate_exactInput_form
- action_ask_exactInput_form_tokenInContract
- action_ask_exactInput_form_tokenOutContract
- action_clear_allSlot
- action_ask_exactInput_form_amountIn
- action_ask_exactInput_form_minimalAmountOut
- validate_sendToken_form
- action_submit_sendToken_form
- action_ask_sendToken_form_tokenInContract
- validate_copyTrading_form
- action_submit_copyTrading_form
- action_ask_copyTrading_form_maximalAmountOfCopyTrading
- action_llm
session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
